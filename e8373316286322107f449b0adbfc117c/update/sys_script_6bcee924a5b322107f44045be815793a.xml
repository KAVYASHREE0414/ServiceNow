<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>u_residents</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Assign Resident Role</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
    // make sure the Resident field has a value
    if (current.resident) {
        var roleName = 'u_residents_user';

        // check if the user already has the role
        var userHasRole = new GlideRecord('sys_user_has_role');
        userHasRole.addQuery('user', current.resident);
        userHasRole.addQuery('role.name', roleName);
        userHasRole.query();

        if (!userHasRole.next()) {
            // get the role record
            var roleGr = new GlideRecord('sys_user_role');
            roleGr.addQuery('name', roleName);
            roleGr.query();
            if (roleGr.next()) {
                // assign the role
                var newRole = new GlideRecord('sys_user_has_role');
                newRole.initialize();
                newRole.user = current.resident;
                newRole.role = roleGr.sys_id;
                newRole.insert();
            }
        }
    }
})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>DEPAVATH.NARESH</sys_created_by>
        <sys_created_on>2025-09-02 04:07:23</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>6bcee924a5b322107f44045be815793a</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Assign Resident Role</sys_name>
        <sys_overrides/>
        <sys_package display_value="Resident service and visitor management system" source="e8373316286322107f449b0adbfc117c">e8373316286322107f449b0adbfc117c</sys_package>
        <sys_policy/>
        <sys_scope display_value="Resident service and visitor management system">e8373316286322107f449b0adbfc117c</sys_scope>
        <sys_update_name>sys_script_6bcee924a5b322107f44045be815793a</sys_update_name>
        <sys_updated_by>DEPAVATH.NARESH</sys_updated_by>
        <sys_updated_on>2025-09-02 04:30:56</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=6bcee924a5b322107f44045be815793a"/>
</record_update>
